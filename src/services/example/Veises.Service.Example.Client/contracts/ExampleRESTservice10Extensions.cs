// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veises.Service.Example.Client
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ExampleRESTservice10.
    /// </summary>
    public static partial class ExampleRESTservice10Extensions
    {
            /// <summary>
            /// Get all values
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='version'>
            /// </param>
            public static IList<string> ApiVversionValuesGet(this IExampleRESTservice10 operations, string version)
            {
                return operations.ApiVversionValuesGetAsync(version).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all values
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<string>> ApiVversionValuesGetAsync(this IExampleRESTservice10 operations, string version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiVversionValuesGetWithHttpMessagesAsync(version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void ApiVversionValuesPost(this IExampleRESTservice10 operations, string version, string value = default(string))
            {
                operations.ApiVversionValuesPostAsync(version, value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionValuesPostAsync(this IExampleRESTservice10 operations, string version, string value = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiVversionValuesPostWithHttpMessagesAsync(version, value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static void ApiVversionValuesByIdGet(this IExampleRESTservice10 operations, int id, string version)
            {
                operations.ApiVversionValuesByIdGetAsync(id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionValuesByIdGetAsync(this IExampleRESTservice10 operations, int id, string version, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiVversionValuesByIdGetWithHttpMessagesAsync(id, version, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void ApiVversionValuesByIdPut(this IExampleRESTservice10 operations, int id, string version, string value = default(string))
            {
                operations.ApiVversionValuesByIdPutAsync(id, version, value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionValuesByIdPutAsync(this IExampleRESTservice10 operations, int id, string version, string value = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiVversionValuesByIdPutWithHttpMessagesAsync(id, version, value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static void ApiVversionValuesByIdDelete(this IExampleRESTservice10 operations, int id, string version)
            {
                operations.ApiVversionValuesByIdDeleteAsync(id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionValuesByIdDeleteAsync(this IExampleRESTservice10 operations, int id, string version, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiVversionValuesByIdDeleteWithHttpMessagesAsync(id, version, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
